buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.4.1.RELEASE")
        classpath 'org.github.ngbinh.scalastyle:gradle-scalastyle-plugin_2.11:0.8.2'
    }
}

// Apply the java plugin to add support for Java
plugins {
    id 'java'
    id 'scala'
    id 'idea'
    id 'maven'
    id 'com.github.kt3k.coveralls' version '2.6.3'
}

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    mavenCentral()
    maven {
        url 'https://jitpack.io'
    }
}

subprojects {
    buildscript {
        repositories { mavenCentral() }
        dependencies {
            classpath("org.springframework.boot:spring-boot-gradle-plugin:1.4.1.RELEASE")
        }
    }

    ext { sprintBootVersion = "1.4.1.RELEASE" }

    apply plugin: 'java'

    //Latest version for publish
    version = "0.2.9"

    repositories {
        mavenCentral()
        maven { url 'https://jitpack.io' }
    }

    apply plugin: 'spring-boot'
    apply plugin: 'java'
    apply plugin: 'eclipse'

    // In this section you declare the dependencies for your production and test code
    dependencies {
        // The production code uses the SLF4J logging API at compile time
        compile 'org.slf4j:slf4j-api:1.7.21'
        compile("org.springframework.boot:spring-boot-starter-web:$sprintBootVersion") {
            exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
        }
        compile("org.springframework.boot:spring-boot-starter-actuator:$sprintBootVersion")
        compile("org.springframework.boot:spring-boot:$sprintBootVersion")
        
        //ServletException requires compile time servlet dependency but it causes problems
        //when deployed if exist on war run time.. hence provided but also compileOnly
        compileOnly("org.springframework.boot:spring-boot-starter-tomcat")
        
        compile 'com.google.code.gson:gson:2.3.1'
        compile 'javax.inject:javax.inject:1'
        
        //Authentication
        compile("org.springframework.boot:spring-boot-starter-security:$sprintBootVersion")
        compile 'org.springframework.security:spring-security-ldap:4.1.3.RELEASE'
        compile 'org.apache.directory.server:apacheds-server-jndi:1.5.5'
        compile 'io.springfox:springfox-swagger2:2.4.0'
        compile 'io.springfox:springfox-swagger-ui:2.4.0'
        compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.0'
        
        //Injectable Message Library and its Implementation
        compile 'com.github.Ericsson:eiffel-remrem-shared:0.3.0'
        compile 'com.github.Ericsson:eiffel-remrem-protocol-interface:0.0.1'
        compile 'com.github.Ericsson:eiffel-remrem-semantics:0.2.0'               
        
        // Declare the dependency for your favourite test framework you want to use in your tests.
        // TestNG is also supported by the Gradle Test task. Just change the
        // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
        // 'test.useTestNG()' to your build script.
        testCompile 'junit:junit:4.12'
        testCompile 'org.assertj:assertj-core:3.4.1'
        testCompile "org.springframework.boot:spring-boot-starter-test:$sprintBootVersion"
        testCompile 'com.jayway.jsonpath:json-path-assert:2.2.0'
    }
}