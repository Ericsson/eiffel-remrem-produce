/*
 Copyright 2017 Ericsson AB.
 For a full list of individual contributors, please see the commit history.
 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

 http://www.apache.org/licenses/LICENSE-2.0
 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
*/
buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.4.1.RELEASE")
        classpath 'org.github.ngbinh.scalastyle:gradle-scalastyle-plugin_2.11:0.8.2'
    }
}

// Apply the java plugin to add support for Java
plugins {
    id 'java'
    id 'scala'
    id 'idea'
    id 'maven'
    id 'com.github.kt3k.coveralls' version '2.6.3'
}

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    mavenCentral()
    maven {
        url 'https://jitpack.io'
    }
}
    ext {
    springBootVersion = "1.4.1.RELEASE"
    }

//This task is used to build the subprojects within eiffel-remrem-publish
subprojects {
    //For all subproject we add the build script and dependencies here
    buildscript {
        repositories {
            mavenCentral()
        }
        dependencies {
            classpath("org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion")
        }
    }
    //Spring boot version
    //Apply the java plugin to add support for Java
    apply plugin: 'java'

    //Latest version for publish
    version = "0.4.5"

    //Declare where to find the dependencies of project here
    repositories {
        // Use 'jcenter' for resolving your dependencies.
        // You can declare any Maven/Ivy/file repository here.
        mavenCentral()
        maven { url 'https://jitpack.io' }
    }

    apply plugin: 'spring-boot'
    apply plugin: 'eclipse'
    apply plugin: 'maven'

    //Used to execute the build from gradlew.bat from the root of the project
    task wrapper(type: Wrapper) {
        gradleVersion = '3.1'
        distributionUrl = "https://services.gradle.org/distributions/gradle-$gradleVersion-all.zip"
    }

    //Declare the dependencies for all subprojects and test code
    dependencies {
        // The code uses the SLF4J logging API at compile time
        compile 'org.slf4j:slf4j-api:1.7.21'
        compile("org.springframework.boot:spring-boot-starter-web:$springBootVersion") {
            exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
        }

        //Actuator endpoints allow you to monitor and interact with application
        //To create and activate spring boot endpoints
        compile("org.springframework.boot:spring-boot-starter-actuator:$springBootVersion")
        compile("org.springframework.boot:spring-boot:$springBootVersion")
        
        //To process Json content
        compile 'com.google.code.gson:gson:2.3.1'
        //To Inject annotations, For eg: @Autowired/@Resource/@Inject
        compile 'javax.inject:javax.inject:1'
        
        //Authentication
        compile("org.springframework.boot:spring-boot-starter-security:$springBootVersion")
        compile 'org.springframework.security:spring-security-ldap:4.1.3.RELEASE'

        //Swagger is a specification for documenting REST API.
        //It specifies the format (URL, method, and representation) to describe REST web services
        compile 'io.springfox:springfox-swagger2:2.4.0'
        compile 'io.springfox:springfox-swagger-ui:2.4.0'
        compile 'org.apache.commons:commons-lang3:3.5'
        
        //Injectable Message Library and its Implementation
        compile 'com.github.Ericsson:eiffel-remrem-shared:0.3.4'
        compile 'com.github.Ericsson:eiffel-remrem-protocol-interface:0.0.1'
        //For publishing eiffel2.0 events
        compile("com.github.Ericsson:eiffel-remrem-semantics:0.2.8"){
                exclude group: 'org.apache.commons'
        }
        
        //Declare the dependency for your favourite test framework you want to use in your tests.
        //TestNG is also supported by the Gradle Test task. Just change the
        //testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
        //'test.useTestNG()' to your build script.
        testCompile 'junit:junit:4.12'
        testCompile 'org.assertj:assertj-core:3.4.1'
        testCompile "org.springframework.boot:spring-boot-starter-test:$springBootVersion"
        testCompile 'com.jayway.jsonpath:json-path-assert:2.2.0'
    }
}