plugins {
    id 'war'
    id 'jacoco' // provides code coverage metrics for Java code via integration with Jacoco
}

//This task creates the executable service war
war {
    baseName = 'publish-service'
}

//JacocoReport task can be used to generate code coverage reports in different formats
jacocoTestReport {
    reports {
        xml.enabled = true // coveralls plugin depends on xml format report
        html.enabled = true
        html.destination "${buildDir}/jacocoHtml"
   }
    executionData = files('build/jacoco/jacocoTest.exec', 'build/jacoco/test.exec')
}

configurations {
    providedRuntime
    provided

    integrationTestCompile.extendsFrom testCompile
    integrationTestRuntime.extendsFrom testRuntime
}

sourceSets {
    integrationTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/integration-test/java')
        }
        resources.srcDir file('src/integration-test/resources')
    }
}

//Assembles all the archives in the project.
install.dependsOn assemble

task integrationTest(type: Test) {
    jacoco {
        destinationFile = file("$buildDir/jacoco/jacocoTest.exec")
        classDumpFile = file("$buildDir/classes/integrationTest")
    }

    testClassesDir = sourceSets.integrationTest.output.classesDir
    classpath = sourceSets.integrationTest.runtimeClasspath
    outputs.upToDateWhen { false }
}

//Declare the dependencies for this project and test code
dependencies {
    compile project(':publish-common')
    compile('com.jayway.restassured:rest-assured:2.9.0')
    //ServletException requires compile time servlet dependency but it causes problems
    //when deployed if exist on war run time.. hence provided but also compileOnly
    compileOnly("org.springframework.boot:spring-boot-starter-tomcat")
    providedRuntime("org.springframework.boot:spring-boot-starter-tomcat")
    testCompile("org.springframework.boot:spring-boot-starter-tomcat")
        
}