{
  "name": "Eiffel-remrem-publish",
  "tagline": "eiffel-remrem-publish",
  "body": "# RemRem Publish\r\n\r\nRemRem Publish is a microservice allowing sending of messages to a topic based exchange on a RabbitMQ Server. It has an endPoint that must be called \r\n[a relative link](producer/msg)\r\n\r\n## Compatibility\r\n* JDK8\r\n* Tomcat 7\r\n\r\n## How to Install?\r\nBinary is relased via jitPack and latest version can be accessed via \r\n[Latest Version Binary](https://jitpack.io/com/github/Ericsson/eiffel-remrem-publish/0.1.2/eiffel-remrem-publish-0.1.2.war)\r\n\r\nRemRem Publish microservice in this repository are licensed under the [Apache License 2.0](./LICENSE).\r\n\r\n## How to use?\r\nTwo parameters need to be provided:\r\n* rabbitmq.exchange.name (String)\r\n* rabbitmq.host (String)\r\n\r\nFor stand-alone deployment, it can be utilized like this:\r\n`java -Drabbitmq.host=127.0.0.1 -Drabbitmq.exchange.name=eiffel.poc -jar eiffel-remrem*`\r\n\r\nBinary comes in War format which allows easy deployment in application servers such as Tomcat. In that case, these parameters must be provided to java process running tomcat.\r\n\r\n\r\n## Testing\r\n**Request:**\r\n`curl -H \"Content-Type: application/json\" -X POST -d '[ \"message1\", \"message2\" ]' http://localhost:8080/producer/msg?rk=x`\r\n\r\n**Response:**\r\n`[\"succeed\",\"succeed\"]`\r\n\r\nNow you can check your RabbitMQ to see these messages in a queue.\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}